module;

import ^.*;
import lib.icmf.receiver.*;

namespace Leaderboard {
    struct s_reward {
        player: pubkey;
        points: integer;
    }

    entity __def {
        player: pubkey;
        mutable points: integer;
    }

    function ensure(player: pubkey) {
        val res = __def @? {player};

        if(res == null) {
            return create __def(player, 0);
        }

        return res;
    }

    @extend(receive_icmf_message) function(sender: byte_array, topic: text, body: gtv) {
        if(topic != "L_ttt_result") {
            log("received message on unknown topic: ", topic);
            return;
        }

        val rewards = list<s_reward>.from_gtv(body);

        for(i in rewards) {
            log("incrementing points for ", i.player, " by ", i.points);
            val entry = ensure(i.player);
            entry.points += i.points;
        }
    }
}
